## ==============================
## SERVER CONFIGURATION
## ==============================
#server.port=8080
#spring.application.name=api-gateway
#
## ==============================
## EUREKA CLIENT CONFIGURATION
## ==============================
##eureka.client.serviceUrl.defaultZone=http://eureka:password@discovery-server:8761/eureka
#eureka.client.serviceUrl.defaultZone=http://${EUREKA_USERNAME}:${EUREKA_PASSWORD}@discovery-server:8761/eureka
#eureka.instance.hostname=${EUREKA_INSTANCE_HOSTNAME:localhost}
#eureka.client.registerWithEureka=true
#eureka.client.fetchRegistry=true
#eureka.client.enabled=true
#eureka.client.healthcheck.enabled=true
#
#eureka.instance.prefer-ip-address=true
#eureka.instance.instance-id=${spring.application.name}:${server.port}
#
## ==============================
## SPRING CLOUD GATEWAY CONFIGURATION
## ==============================
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
#spring.cloud.gateway.httpclient.pool.type=fixed
#spring.cloud.gateway.httpclient.pool.max-connections=200
#spring.cloud.gateway.httpclient.pool.acquire-timeout=5000
#
## ==============================
## SECURITY CONFIGURATION (Keycloak)
## ==============================
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8181/realms/spring-boot-microservices-realm
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8181/realms/spring-boot-microservices-realm/protocol/openid-connect/certs
#
## ==============================
## TRACING CONFIGURATION (Zipkin)
## ==============================
#management.tracing.enabled=true
#management.tracing.sampling.probability=1.0
#management.tracing.zipkin.endpoint=${ZIPKIN_BASE_URL:http://zipkin:9411}
#
## Enable detailed metrics
#management.metrics.distribution.percentiles-histogram.http.server.requests=true
#
## ==============================
## LOGGING CONFIGURATION
## ==============================
#logging.level.root=INFO
#logging.level.com.netflix.eureka=DEBUG
#logging.level.com.netflix.discovery=DEBUG
##logging.level.org.springframework.cloud.gateway=TRACE
#logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
#logging.level.org.springframework.cloud.gateway.handler.predicate=DEBUG
##logging.level.org.springframework.cloud.gateway.filter=DEBUG
#
#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.web=DEBUG
#
#logging.level.org.springframework.web.reactive.function.client.ExchangeFilterFunctions=DEBUG
#logging.level.org.springframework.cloud.gateway.filter.headers=TRACE
#
#logging.level.org.springframework.cloud.gateway=INFO
#logging.level.org.springframework.cloud.gateway.filter=INFO
#
#spring.web.cors.allowed-origins=*
#spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
#spring.web.cors.allowed-headers=*
#
#spring.cloud.gateway.routes[2].filters[2]=CircuitBreaker=orderServiceCB
#spring.cloud.gateway.routes[3].filters[2]=CircuitBreaker=productServiceCB
#spring.cloud.gateway.routes[4].filters[2]=CircuitBreaker=inventoryServiceCB
#
#spring.cloud.gateway.routes[2].filters[3]=FallbackHeaders=orderServiceFallback
#
#spring.cloud.gateway.default-filters[0]=AddRequestHeader=X-Request-ID, {random.uuid}
#
## Logging pattern to include traceId and spanId
#logging.pattern.level=%5p [${spring.application.name:}, %X{traceId:-}, %X{spanId:-}]
#
## ==============================
## PERFORMANCE TUNING
## ==============================
## Timeout settings for Gateway HTTP Client
#spring.cloud.gateway.httpclient.connect-timeout=5000
#spring.cloud.gateway.httpclient.response-timeout=5000
#spring.cloud.gateway.httpclient.read-timeout=5000
#
## ==============================
## SPRING BOOT BUILD CONFIGURATION
## ==============================
#spring.boot.build.layered.enabled=true
#
## Gateway Route: Eureka Dashboard
#spring.cloud.gateway.routes[0].id=discovery-server
#spring.cloud.gateway.routes[0].uri=http://localhost:8761
#spring.cloud.gateway.routes[0].predicates[0]=Path=/eureka/web
#spring.cloud.gateway.routes[0].filters[0]=SetPath=/
#spring.cloud.gateway.routes[0].filters[1]=SetResponseHeader=Cache-Control, no-store
#
## Gateway Route: Eureka Static Resources
#spring.cloud.gateway.routes[1].id=discovery-server-static
#spring.cloud.gateway.routes[1].uri=http://localhost:8761
#spring.cloud.gateway.routes[1].predicates[0]=Path=/eureka
#
## Gateway Route: Order Service
#spring.cloud.gateway.routes[2].id=order-service
#spring.cloud.gateway.routes[2].uri=lb://ORDER-SERVICE
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/order/**
#
## Gateway Route: Product Service
#spring.cloud.gateway.routes[3].id=product-service
#spring.cloud.gateway.routes[3].uri=lb://PRODUCT-SERVICE
#spring.cloud.gateway.routes[3].predicates[0]=Path=/api/product/**
#
## Gateway Route: Inventory Service
#spring.cloud.gateway.routes[4].id=inventory-service
#spring.cloud.gateway.routes[4].uri=lb://INVENTORY-SERVICE
#spring.cloud.gateway.routes[4].predicates[0]=Path=/api/inventory/**
#
### ==============================
### SERVER CONFIGURATION
### ==============================
##server.port=8080
##spring.application.name=api-gateway
##
### ==============================
### EUREKA CLIENT CONFIGURATION
### ==============================
##eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka
##eureka.client.registerWithEureka=true
##eureka.client.fetchRegistry=true
##eureka.client.enabled=true
##eureka.instance.hostname=localhost
##eureka.instance.prefer-ip-address=true
##
### ==============================
### SPRING CLOUD GATEWAY CONFIGURATION
### ==============================
### Enable service discovery for Gateway routes
##spring.cloud.gateway.discovery.locator.enabled=true
##
### Gateway Route: Eureka Dashboard
##spring.cloud.gateway.routes[0].id=discovery-server
##spring.cloud.gateway.routes[0].uri=http://localhost:8761
##spring.cloud.gateway.routes[0].predicates[0]=Path=/eureka/web
##spring.cloud.gateway.routes[0].filters[0]=SetPath=/
##
### Gateway Route: Eureka Static Resources
##spring.cloud.gateway.routes[1].id=discovery-server-static
##spring.cloud.gateway.routes[1].uri=http://localhost:8761
##spring.cloud.gateway.routes[1].predicates[0]=Path=/eureka
##
### Gateway Route: Order Service
##spring.cloud.gateway.routes[2].id=order-service
##spring.cloud.gateway.routes[2].uri=lb://ORDER-SERVICE
##spring.cloud.gateway.routes[2].predicates[0]=Path=/api/order/**
##
### Gateway Route: Product Service
##spring.cloud.gateway.routes[3].id=product-service
##spring.cloud.gateway.routes[3].uri=lb://PRODUCT-SERVICE
##spring.cloud.gateway.routes[3].predicates[0]=Path=/api/product/**
##
### Gateway Route: Inventory Service
##spring.cloud.gateway.routes[4].id=inventory-service
##spring.cloud.gateway.routes[4].uri=lb://INVENTORY-SERVICE
##spring.cloud.gateway.routes[4].predicates[0]=Path=/api/inventory/**
##
### ==============================
### SECURITY CONFIGURATION (Keycloak)
### ==============================
##spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-boot-microservices-realm
##spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/spring-boot-microservices-realm/protocol/openid-connect/certs
##
### ==============================
### TRACING CONFIGURATION (Zipkin)
### ==============================
##management.tracing.enabled=true
##management.tracing.sampling.probability=1.0
##management.tracing.zipkin.endpoint=http://localhost:9411/v2/spans
##management.metrics.distribution.percentiles-histogram.http.server.requests=true
##
### ==============================
### LOGGING CONFIGURATION
### ==============================
##logging.level.root=INFO
##logging.level.com.netflix.eureka=DEBUG
##logging.level.com.netflix.discovery=DEBUG
##logging.level.org.springframework.cloud.gateway=TRACE
##logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
##
### Logging pattern to include traceId and spanId
##logging.pattern.level=%5p [${spring.application.name:}, %X{traceId:-}, %X{spanId:-}]
##
### ==============================
### OPTIONAL: PERFORMANCE TUNING
### ==============================
### Timeout settings for Gateway HTTP Client
##spring.cloud.gateway.httpclient.connect-timeout=5000
##spring.cloud.gateway.httpclient.response-timeout=5000
##
### ==============================
### SPRING BOOT BUILD CONFIGURATION
### ==============================
##spring.boot.build.layered.enabled=true


# ==============================
# SERVER CONFIGURATION
# ==============================
server.port=8080
spring.application.name=api-gateway
spring.profiles.active=${SPRING_PROFILES_ACTIVE}
spring.config.import=optional:classpath:.env

# ==============================
# EUREKA CLIENT CONFIGURATION
# ==============================
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://${EUREKA_USERNAME}:${EUREKA_PASSWORD}@discovery-server:8761/eureka}
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.enabled=true
eureka.instance.hostname=api-gateway
eureka.instance.prefer-ip-address=true

# ==============================
# TRACING CONFIGURATION (Zipkin)
# ==============================
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.tracing.zipkin.endpoint=${ZIPKIN_BASE_URL:http://localhost:9411}
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# ==============================
# SPRING CLOUD GATEWAY CONFIGURATION
# ==============================
# Enable service discovery for Gateway routes
#spring.cloud.gateway.discovery.locator.enabled=true

# Gateway Route: Eureka Dashboard
spring.cloud.gateway.routes[0].id=discovery-server
spring.cloud.gateway.routes[0].uri=http://discovery-server:8761
spring.cloud.gateway.routes[0].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[0].filters[0]=SetPath=/

# Gateway Route: Eureka Static Resources
spring.cloud.gateway.routes[1].id=discovery-server-static
spring.cloud.gateway.routes[1].uri=http://discovery-server:8761
spring.cloud.gateway.routes[1].predicates[0]=Path=/eureka

# Gateway Route: Order Service
spring.cloud.gateway.routes[2].id=order-service
spring.cloud.gateway.routes[2].uri=lb://order-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/order/**

# Gateway Route: Product Service
spring.cloud.gateway.routes[3].id=product-service
spring.cloud.gateway.routes[3].uri=lb://product-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/product/**

# Gateway Route: Inventory Service
spring.cloud.gateway.routes[4].id=inventory-service
spring.cloud.gateway.routes[4].uri=lb://inventory-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/inventory/**

# ==============================
# SECURITY CONFIGURATION (Keycloak)
# ==============================
spring.security.oauth2.resourceserver.jwt.issuer-uri=${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI:http://keycloak:8181/realms/spring-boot-microservices-realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI:http://keycloak:8181/realms/spring-boot-microservices-realm/protocol/openid-connect/certs}

# ==============================
# LOGGING CONFIGURATION
# ==============================
logging.level.root=INFO
logging.level.com.netflix.eureka=DEBUG
logging.level.com.netflix.discovery=DEBUG
logging.level.org.springframework.cloud.gateway=TRACE
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.io.micrometer.tracing=DEBUG
logging.level.brave=DEBUG

# Logging pattern to include traceId and spanId
logging.pattern.level=%5p [${spring.application.name:}, %X{traceId:-}, %X{spanId:-}]

# ==============================
# OPTIONAL: PERFORMANCE TUNING
# ==============================
# Timeout settings for Gateway HTTP Client
spring.cloud.gateway.httpclient.connect-timeout=5000
spring.cloud.gateway.httpclient.response-timeout=5000

# ==============================
# SPRING BOOT BUILD CONFIGURATION
# ==============================
spring.boot.build.layered.enabled=true