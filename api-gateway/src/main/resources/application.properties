# ==============================
# SERVER CONFIGURATION
# ==============================
server.port=8080
spring.application.name=api-gateway
spring.config.import=optional:classpath:.env
# ==============================
# EUREKA CLIENT CONFIGURATION
# ==============================
eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka/
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.enabled=true
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
# ==============================
# SPRING CLOUD GATEWAY CONFIGURATION
# ==============================
# Enable service discovery for Gateway routes
spring.cloud.gateway.discovery.locator.enabled=true
# Gateway Route: Eureka Dashboard
spring.cloud.gateway.routes[0].id=discovery-server
spring.cloud.gateway.routes[0].uri=http://localhost:8761
spring.cloud.gateway.routes[0].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[0].filters[0]=SetPath=/
# Gateway Route: Eureka Static Resources
spring.cloud.gateway.routes[1].id=discovery-server-static
spring.cloud.gateway.routes[1].uri=http://localhost:8761
spring.cloud.gateway.routes[1].predicates[0]=Path=/eureka
# Gateway Route: Order Service
spring.cloud.gateway.routes[2].id=order-service
spring.cloud.gateway.routes[2].uri=lb://order-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/order/**
# Gateway Route: Product Service
spring.cloud.gateway.routes[3].id=product-service
spring.cloud.gateway.routes[3].uri=lb://product-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/product/**
# Gateway Route: Inventory Service
spring.cloud.gateway.routes[4].id=inventory-service
spring.cloud.gateway.routes[4].uri=lb://inventory-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/inventory/**
# Gateway Route: Inventory Service
spring.cloud.gateway.routes[5].id=notification-service
spring.cloud.gateway.routes[5].uri=lb://in-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/inventory/**
# ==============================
# SECURITY CONFIGURATION (Keycloak)
# ==============================
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-boot-microservices-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/spring-boot-microservices-realm/protocol/openid-connect/certs
# ==============================
# TRACING CONFIGURATION (Zipkin)
# ==============================
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.tracing.zipkin.endpoint=${ZIPKIN_BASE_URL:http://localhost:9411}
management.metrics.distribution.percentiles-histogram.http.server.requests=true
# ==============================
# LOGGING CONFIGURATION
# ==============================
logging.level.root=INFO
logging.level.com.netflix.eureka=DEBUG
logging.level.com.netflix.discovery=DEBUG
logging.level.org.springframework.cloud.gateway=TRACE
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
# Logging pattern to include traceId and spanId
logging.pattern.level=%5p [${spring.application.name:}, %X{traceId:-}, %X{spanId:-}]
# ==============================
# OPTIONAL: PERFORMANCE TUNING
# ==============================
# Timeout settings for Gateway HTTP Client
spring.cloud.gateway.httpclient.connect-timeout=5000
spring.cloud.gateway.httpclient.response-timeout=5000
# ==============================
# SPRING BOOT BUILD CONFIGURATION
# ==============================
spring.boot.build.layered.enabled=true