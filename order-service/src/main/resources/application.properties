# Application Information
spring.application.name=order-service

# Database Configuration
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true

# Server Port
server.port=8081

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka/
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.enabled=true

# Management and Health Actuator Endpoints
management.health.circuit-breakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilience4J Configuration for Inventory Service
# Circuit Breaker Properties
resilience4j.circuit-breaker.instances.inventory.register-health-indicator=true
resilience4j.circuit-breaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuit-breaker.instances.inventory.sliding-window-type=COUNT_BASED
resilience4j.circuit-breaker.instances.inventory.sliding-window-size=5
resilience4j.circuit-breaker.instances.inventory.failure-rate-threshold=50
resilience4j.circuit-breaker.instances.inventory.wait-duration-in-open-state=5s
resilience4j.circuit-breaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuit-breaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true

# Time Limiter Properties
resilience4j.time-limiter.instances.inventory.timeout-duration=2s
resilience4j.time-limiter.instances.inventory.cancel-running-future=true

# Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

# Tracing Configuration
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.tracing.zipkin.endpoint=http://localhost:9411

# Metrics Configuration for Exemplars
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Logging Configuration to Include Trace and Span IDs
logging.pattern.level=%5p [${spring.application.name:}, %X{traceId:-}, %X{spanId:-}]

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.group-id=notificationId
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.arseniolourenco.order_service.event.OrderPlacedEvent