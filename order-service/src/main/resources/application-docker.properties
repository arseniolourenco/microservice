# ==============================
# APPLICATION CONFIGURATION
# ==============================
spring.application.name=order-service
server.port=8081

# ==============================
# DATABASE CONFIGURATION (PostgreSQL)
# ==============================
spring.datasource.url={$SPRING_DATASOURCE_URL}
spring.datasource.username={$SPRING_DATASOURCE_USERNAME}
spring.datasource.password={$SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# ==============================
# JPA CONFIGURATION
# ==============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


# ==============================
# EUREKA CLIENT CONFIGURATION
# ==============================
eureka.client.service-url.defaultZone=http://eureka:password@discovery-server:8761/eureka/
eureka.instance.hostname=discovery-server
eureka.instance.prefer-ip-address=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.enabled=true

# ==============================
# MANAGEMENT & HEALTH CONFIGURATION
# ==============================
management.health.circuit-breakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# ==============================
# RESILIENCE4J CONFIGURATION
# ==============================
# Circuit Breaker for Inventory Service
resilience4j.circuit-breaker.instances.inventory.register-health-indicator=true
resilience4j.circuit-breaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuit-breaker.instances.inventory.sliding-window-type=COUNT_BASED
resilience4j.circuit-breaker.instances.inventory.sliding-window-size=5
resilience4j.circuit-breaker.instances.inventory.failure-rate-threshold=50
resilience4j.circuit-breaker.instances.inventory.wait-duration-in-open-state=5s
resilience4j.circuit-breaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuit-breaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true

# Time Limiter for Inventory Service
resilience4j.time-limiter.instances.inventory.timeout-duration=2s
resilience4j.time-limiter.instances.inventory.cancel-running-future=true

# Retry for Inventory Service
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

# ==============================
# TRACING & METRICS CONFIGURATION
# ==============================
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.tracing.zipkin.endpoint=http://zipkin:9411
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Include Trace and Span IDs in Logs
logging.pattern.level=%5p [${spring.application.name:}, %X{traceId:-}, %X{spanId:-}]

# ==============================
# KAFKA CONFIGURATION
# ==============================
spring.kafka.bootstrap-server=kafka:29092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.group-id=notificationId
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.arseniolourenco.order_service.event.OrderPlacedEvent