#name: Build and Deploy Microservices
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#permissions:
#  contents: read
#  packages: write
#  security-events: write
#
#env:
#  REGISTRY: ghcr.io
#  REPO_OWNER: ${{ github.repository_owner }}
#
#jobs:
#  #  build-and-deploy:
#  build:
#    strategy:
#      matrix:
#        image_name: [ "api-gateway", "discovery-server", "order-service", "product-service", "inventory-service", "notification-service" ]
#    runs-on: linux/amd64
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v2
#
#      - name: Set Up Java 22
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'corretto'
#          java-version: '22'
#          cache: maven
#
#      - name: Build All Modules (Skip Tests)
#        run: mvn clean install -DskipTests
#
#      - name: Run All Tests
#        run: mvn test
#
#      - name: Build and Push Docker Image for ${{ matrix.image_name }}
#        working-directory: ${{ matrix.image_name }}
#        run: |
#          docker buildx build \
#            --platform linux/amd64 \
#            --tag ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.image_name }}:latest \
#            --push \
#            .
#
#      - name: Submit Dependency Graph to GitHub
#        uses: github/dependency-submission-action@v3
#        with:
#          working-directory: ${{ matrix.image_name }}
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Log in to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}


name: CI/CD Pipeline for Microservices

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  REPO_OWNER: ${{ github.repository_owner }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [ "api-gateway", "discovery-server", "order-service", "inventory-service", "notification-service", "product-service" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 22
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '22'
          cache: maven

      - name: Build All Services (skip tests)
        run: mvn clean install -DskipTests

      - name: Run Tests
        run: mvn test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push ${{ matrix.service }} Image
        working-directory: ${{ matrix.service }}
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --tag ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.service }}:latest \
            --push \
            .