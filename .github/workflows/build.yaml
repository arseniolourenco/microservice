#name: Build and Deploy Microservices
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#env:
#  REGISTRY: ghcr.io
#  REPO_OWNER: ${{ github.repository_owner }}
#
#jobs:
#  build:
#    strategy:
#      matrix:
#        service: ["api-gateway", "discovery-server", "order-service", "product-service", "inventory-service", "notification-service"]
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v3
#
#      - name: Set Up JDK 22
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'corretto'
#          java-version: '22'
#          cache: maven
#
#      - name: Build Maven Project
#        run: mvn clean install -DskipTests
#
#      - name: Run Tests
#        run: mvn test
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Log in to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Build and Push Docker Image for ${{ matrix.service }}
#        working-directory: ${{ matrix.service }}
#        run: |
#          docker build -t ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.service }}:latest .
#          docker push ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.service }}:latest
#
##name: Build and Deploy Microservices
##
##on:
##  push:
##    branches:
##      - main
##  pull_request:
##    branches:
##      - main
##
##env:
##  REGISTRY: ghcr.io
##  REPO_OWNER: ${{ github.repository_owner }}
##
##jobs:
##  build:
##    strategy:
##      matrix:
##        service: ["api-gateway", "discovery-server", "order-service", "product-service", "inventory-service", "notification-service"]
##    runs-on: ubuntu-latest
##
##    steps:
##      - name: Checkout Repository
##        uses: actions/checkout@v3
##
##      - name: Set Up JDK 22
##        uses: actions/setup-java@v3
##        with:
##          distribution: 'corretto'
##          java-version: '22'
##          cache: maven
##
##      - name: Build Maven Project
##        run: mvn clean install -DskipTests
##
##      - name: Run Tests
##        run: mvn test
##
##      - name: Submit Dependencies to GitHub
##        uses: github/dependency-submission-action@v4
##        with:
##          working-directory: ${{ matrix.service }}
##
##      - name: Set up Docker Buildx
##        uses: docker/setup-buildx-action@v3
##
##      - name: Log in to GitHub Container Registry
##        uses: docker/login-action@v2
##        with:
##          registry: ghcr.io
##          username: ${{ github.actor }}
##          password: ${{ secrets.GITHUB_TOKEN }}
##
##      - name: Build and Push Docker Image for ${{ matrix.service }}
##        working-directory: ${{ matrix.service }}
##        run: |
#image:
#tasks:
#  - #          docker build -t ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.service }}:latest .
##          docker push ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.service }}:latest


name: Build and Deploy Microservices

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  REPO_OWNER: ${{ github.repository_owner }}

jobs:
  build-and-deploy:
    strategy:
      matrix:
        service: ["api-gateway", "discovery-server", "order-service", "product-service", "inventory-service", "notification-service"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up JDK 22
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '22'
          cache: maven

      - name: Build Maven Project
        run: mvn clean install -DskipTests

      - name: Run Tests
        run: mvn test

      - name: Upload Test Reports
        uses: actions/upload-artifact@v3
        with:
          name: test-report-${{ matrix.service }}
          path: '**/target/surefire-reports'

      - name: Set Docker Image Tag
        id: image_tag
        run: echo "tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image for ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.service }}:${{ steps.image_tag.outputs.tag }} .
          docker push ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.service }}:${{ steps.image_tag.outputs.tag }}
          docker tag ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.service }}:${{ steps.image_tag.outputs.tag }} ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.service }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.service }}:latest

      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@v0.8.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.service }}:${{ steps.image_tag.outputs.tag }}