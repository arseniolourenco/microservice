# ==============================
# SERVER CONFIGURATION
# ==============================
#spring.application.name=inventory-service
server.port=8080
#spring.config.import=optional:classpath:.env

# DB (values taken from environment variables passed via Docker)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://mysql:3306/inventoryDB
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update


# ==============================
# EUREKA CLIENT CONFIGURATION
# ==============================
eureka.client.service-url.defaultZone=http://eureka:password@discovery-server:8761/eureka
#eureka.instance.hostname=${EUREKA_INSTANCE_HOSTNAME:inventory-service}
#eureka.instance.instance-id=${spring.application.name}:${server.port}
#eureka.instance.prefer-ip-address=true
#eureka.client.registerWithEureka=true
#eureka.client.fetchRegistry=true
#eureka.client.enabled=true
#eureka.client.healthcheck.enabled=true

# TRACING / ZIPKIN
#management.tracing.enabled=true
#management.tracing.sampling.probability=1.0
#management.zipkin.tracing.endpoint=${MANAGEMENT_TRACING_ZIPKIN_ENDPOINT:http://zipkin:9411/api/v2/spans}
spring.zipkin.base-url=http://zipkin:9411

#management.metrics.distribution.percentiles-histogram.http.server.requests=true

# ==============================
# MANAGEMENT & HEALTH CONFIGURATION
# ==============================
#management.endpoints.web.exposure.include=*
#management.endpoints.health.show-details=always
#
## LOGGING
#logging.pattern.level=%5p [${spring.application.name:}, %X{traceId:-}, %X{spanId:-}]
