# ==============================
# SERVER CONFIGURATION
# ==============================
spring.application.name=inventory-service
spring.config.import=optional:classpath:.env
server.port=${SERVER_PORT:8082}

# Eureka
eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL:http://eureka:password@discovery-server:8761/eureka}
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.hostname=${EUREKA_INSTANCE_HOSTNAME:inventory-service}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.enabled=true
eureka.client.healthcheck.enabled=true
eureka.instance.prefer-ip-address=true

# DB (values taken from environment variables passed via Docker)
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:com.mysql.cj.jdbc.Driver}
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://mysql:3306/inventoryDB}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:root}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}

# TRACING / ZIPKIN
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=${MANAGEMENT_TRACING_ZIPKIN_ENDPOINT:http://zipkin:9411/api/v2/spans}
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# LOGGING
logging.pattern.level=%5p [${spring.application.name:}, %X{traceId:-}, %X{spanId:-}]

# (Optional) Enable service discovery for Gateway routing (usually in API gateway only)
# spring.cloud.gateway.discovery.locator.enabled=true
# spring.cloud.gateway.discovery.locator.lower-case-service-id=true
