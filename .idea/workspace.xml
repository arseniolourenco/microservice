<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2eace871-93f9-4d19-8b19-92b15eff8ee9" name="Changes" comment="Product Test">
      <change beforePath="$PROJECT_DIR$/.github/workflows/build.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/.github/workflows/build.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api-gateway/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/api-gateway/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/discovery-server/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/discovery-server/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/inventory-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/inventory-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/notification-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/notification-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/order-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/order-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/Dockerfile" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageOptionsProvider">
    <option name="myAddOrReplace" value="2" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
        <option value="Class" />
        <option value="Interface" />
        <option value="JUnit5 Test Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <branch-grouping />
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;arseniolourenco&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/arseniolourenco/microservice-kitadi-API.git&quot;,
    &quot;accountId&quot;: &quot;d9864795-b34f-4322-a65d-b2423e42c3bb&quot;
  }
}</component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHomeTypeForPersistence" value="WRAPPER" />
        <option name="workOffline" value="true" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="MavenRunner">
    <option name="skipTests" value="true" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2nfR3bN4gDMIYbmuiFZF96KSlu7" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;Application.ApiGatewayApplication.executor&quot;: &quot;Debug&quot;,
    &quot;Application.DiscoveryServerApplication.executor&quot;: &quot;Debug&quot;,
    &quot;Application.InventoryServiceApplication.executor&quot;: &quot;Debug&quot;,
    &quot;Application.NotificationServiceApplication.executor&quot;: &quot;Debug&quot;,
    &quot;Application.OrderServiceApplication.executor&quot;: &quot;Debug&quot;,
    &quot;Application.ProductServiceApplication.executor&quot;: &quot;Debug&quot;,
    &quot;Application.Unnamed.executor&quot;: &quot;Debug&quot;,
    &quot;Docker.api-gateway/Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.discovery-server/Dockerfile deps.executor&quot;: &quot;Run&quot;,
    &quot;Docker.discovery-server/Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.api-gateway: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.discovery-server: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.discovery: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.inventory-service: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.kafdrop: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.kafka-ui: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.kafka: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.keycloak: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.mongo: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.mongoDB: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.mysql: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.notification-service: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.order-service: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.postgres-inventory: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.postgres-order: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.postgres: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.product-service: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.volumes: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.zipkin: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.zookeeper: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.inventory-service/Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.product-service/Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
    &quot;JAR Application.discovery-server-1.0-SNAPSHOT.jar.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.All in microservices-new (1).executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.All in microservices-new.executor&quot;: &quot;Coverage&quot;,
    &quot;JUnit.ProductServiceApplicationIntegrationTests.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceApplicationIntegrationTests.shouldCreateProduct.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceApplicationTests (1).executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceApplicationTests.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceApplicationTests.shouldCreateAndRetrieveProduct.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceApplicationTests.shouldCreateProduct.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceApplicationTests.shouldGetProduct.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceApplicationTests.shouldGetProductById.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceApplicationTests.shouldRetrieveProduct.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceApplicationUnitTests.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceIntegrationTest.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceIntegrationTest.shouldCreateProduct.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceIntegrationTest.shouldGetProductById.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceIntegrationTest.shouldRetrieveProduct.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceTest.deleteProduct.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceTest.deleteProduct_Success.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceTest.deleteProduct_WhenProductNotFound_ShouldThrowException.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceTest.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceTest.getAllProducts.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceTest.getProductById.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceTest.shouldCreateProduct.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceTest.shouldDeleteProduct_Success.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceTest.shouldRetrieveAllProducts.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceTest.shouldRetrieveProductById.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceTest.updateProduct.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductServiceUnitTest.executor&quot;: &quot;Debug&quot;,
    &quot;Maven.microservices-new [clean,package].executor&quot;: &quot;Run&quot;,
    &quot;Maven.microservices-new [clean,test].executor&quot;: &quot;Run&quot;,
    &quot;Maven.microservices-new [clean,verify].executor&quot;: &quot;Run&quot;,
    &quot;Maven.microservices-new [clean:clean].executor&quot;: &quot;Run&quot;,
    &quot;Maven.microservices-new [clean].executor&quot;: &quot;Run&quot;,
    &quot;Maven.microservices-new [install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.microservices-new [spring-boot:start].executor&quot;: &quot;Run&quot;,
    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
    &quot;full.screen.before.presentation.mode&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;develop&quot;,
    &quot;ignore.preview.features.used&quot;: &quot;true&quot;,
    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;corretto-22 (2)&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/arseniolourenco/Development/microservices-new/inventory-service&quot;,
    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,
    &quot;settings.editor.splitter.proportion&quot;: &quot;0.29531568&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File&quot;: [
      &quot;SQL&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/inventory-service" />
      <recent name="$PROJECT_DIR$/discovery-server/src/main/resources" />
      <recent name="$PROJECT_DIR$/product-service/src/main/resources" />
      <recent name="$PROJECT_DIR$/notification-service/src/main/resources" />
      <recent name="$PROJECT_DIR$/product-service" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="com.arseniolourenco.product_service" />
      <recent name="com.arseniolourenco.product_service.unitTest" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="com.arseniolourenco.product_service.repository" />
      <recent name="com.arseniolourenco.product_service.controller" />
      <recent name="com.arseniolourenco.product_service.service" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.arseniolourenco.product_service" />
      <recent name="com.arseniolourenco.product_service.unit" />
      <recent name="com.arseniolourenco.product_service.integration" />
      <recent name="com.arseniolourenco.inventory_service.dto" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn clean" />
      <command value="mvn spring-boot:start" />
      <command value="mvn clean test" />
      <command value="mvn clean verify" />
      <command value="mvn clean:clean" />
      <command value="mvn clean package" />
      <command value="mvn install" />
    </option>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="Application" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Application.ApiGatewayApplication">
    <configuration default="true" type="AZURE_FUNCTION_SUPPORT" factoryName="Run Functions">
      <option name="appName" />
      <option name="appServicePlanName" />
      <option name="appServicePlanResourceGroup" />
      <option name="appSettingsKey" value="4a05bec0-fbb3-4c81-9d26-380b9fac2abf" />
      <option name="artifact" />
      <option name="debugOptions" />
      <option name="deployment" />
      <option name="deploymentStagingDirectoryPath" />
      <option name="funcPath" />
      <option name="functionHostArguments" />
      <option name="hostJsonPath" />
      <option name="insightsName" />
      <option name="instrumentationKey" />
      <option name="javaVersion" />
      <option name="localSettingsJsonPath" />
      <option name="moduleName" />
      <option name="os" />
      <option name="pricingTier" />
      <option name="providerMap">
        <map />
      </option>
      <option name="region" />
      <option name="resourceGroup" />
      <option name="stagingFolder" />
      <option name="subscription" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ApiGatewayApplication" type="Application" factoryName="Application" nameIsGenerated="true">
      <option name="ALTERNATIVE_JRE_PATH" value="temurin-22" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
      <option name="MAIN_CLASS_NAME" value="com.arseniolourenco.apigateway.ApiGatewayApplication" />
      <module name="api-gateway" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.arseniolourenco.apigateway.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <extension name="net.ashald.envfile">
        <option name="IS_ENABLED" value="true" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DiscoveryServerApplication" type="Application" factoryName="Application" nameIsGenerated="true">
      <option name="ALTERNATIVE_JRE_PATH" value="22" />
      <option name="MAIN_CLASS_NAME" value="com.arseniolourenco.discoveryserver.DiscoveryServerApplication" />
      <module name="discovery-server" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.arseniolourenco.discoveryserver.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <extension name="net.ashald.envfile">
        <option name="IS_ENABLED" value="true" />
        <option name="IS_SUBST" value="true" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </extension>
      <extension name="software.aws.toolkits.jetbrains.core.execution.JavaAwsConnectionExtension">
        <option name="credential" />
        <option name="region" />
        <option name="useCurrentConnection" value="false" />
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="InventoryServiceApplication" type="Application" factoryName="Application" nameIsGenerated="true">
      <option name="ALTERNATIVE_JRE_PATH" value="22" />
      <option name="MAIN_CLASS_NAME" value="com.arseniolourenco.inventory_service.InventoryServiceApplication" />
      <module name="inventory-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.arseniolourenco.notification_service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <extension name="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NotificationServiceApplication" type="Application" factoryName="Application" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.arseniolourenco.notification_service.NotificationServiceApplication" />
      <module name="notification-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.arseniolourenco.notification_service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <extension name="net.ashald.envfile">
        <option name="IS_ENABLED" value="true" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderServiceApplication" type="Application" factoryName="Application" nameIsGenerated="true">
      <option name="ALTERNATIVE_JRE_PATH" value="corretto-22" />
      <option name="MAIN_CLASS_NAME" value="com.arseniolourenco.order_service.OrderServiceApplication" />
      <module name="order-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.arseniolourenco.order_service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <extension name="net.ashald.envfile">
        <option name="IS_ENABLED" value="true" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductServiceApplication" type="Application" factoryName="Application" singleton="false" nameIsGenerated="true">
      <option name="ALTERNATIVE_JRE_PATH" value="$USER_HOME$/Library/Java/JavaVirtualMachines/corretto-22.0.2-1/Contents/Home" />
      <option name="MAIN_CLASS_NAME" value="com.arseniolourenco.product_service.ProductServiceApplication" />
      <module name="product-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.arseniolourenco.product_service.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <extension name="net.ashald.envfile">
        <option name="IS_ENABLED" value="true" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </extension>
      <extension name="software.aws.toolkits.jetbrains.core.execution.JavaAwsConnectionExtension">
        <option name="credential" />
        <option name="region" />
        <option name="useCurrentConnection" value="false" />
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <module name="microservices-new" />
      <extension name="net.ashald.envfile">
        <option name="IS_ENABLED" value="true" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <module name="microservices-new" />
      <extension name="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </extension>
      <option name="MAIN_CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="Java Scratch">
      <shortenClasspath name="NONE" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.api-gateway: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="services">
            <list>
              <option value="api-gateway" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.discovery-server: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="discovery-server" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.inventory-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="inventory-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.keycloak: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="keycloak" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.mysql: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="mysql" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Application.InventoryServiceApplication" />
      <item itemvalue="Application.DiscoveryServerApplication" />
      <item itemvalue="Application.ApiGatewayApplication" />
      <item itemvalue="Application.OrderServiceApplication" />
      <item itemvalue="Application.ProductServiceApplication" />
      <item itemvalue="Application.NotificationServiceApplication" />
      <item itemvalue="Docker.docker-compose.yml.inventory-service: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.discovery-server: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.keycloak: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.api-gateway: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.mysql: Compose Deployment" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.mysql: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.api-gateway: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.keycloak: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.discovery-server: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.inventory-service: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2eace871-93f9-4d19-8b19-92b15eff8ee9" name="Changes" comment="" />
      <created>1729361947702</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1729361947702</updated>
    </task>
    <task id="LOCAL-00001" summary="Product Test">
      <option name="closed" value="true" />
      <created>1732558883886</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1732558883886</updated>
    </task>
    <task id="LOCAL-00002" summary="Product Test">
      <option name="closed" value="true" />
      <created>1740182554542</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1740182554542</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="RECENT_FILTERS">
      <map>
        <entry key="Branch">
          <value>
            <list>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="develop" />
                </option>
              </RecentGroup>
            </list>
          </value>
        </entry>
        <entry key="User">
          <value>
            <list>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="*" />
                </option>
              </RecentGroup>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="develop" />
                      </list>
                    </value>
                  </entry>
                  <entry key="user">
                    <value>
                      <list>
                        <option value="*" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Product Test" />
    <option name="LAST_COMMIT_MESSAGE" value="Product Test" />
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <configuration name="Application">
        <watch expression="esponseStatus(HttpStatus.CREATED)&#10;    public Product createProduct(@RequestBody ProductRequest productRequest) {&#10;        return productService.createProduct(productRequest);&#10;    }" />
      </configuration>
    </watches-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/microservices_new$ProductServiceApplicationTests.ic" NAME="ProductServiceApplicationTests Coverage Results" MODIFIED="1732635002429" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.arseniolourenco.product_service.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/microservices_new$ProductServiceApplicationTests_shouldGetProduct.ic" NAME="ProductServiceApplicationTests.shouldGetProduct Coverage Results" MODIFIED="1732271632169" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.arseniolourenco.product_service.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/microservices_new$ProductServiceApplicationTests_shouldCreateProduct.ic" NAME="ProductServiceApplicationTests.shouldCreateProduct Coverage Results" MODIFIED="1732444340260" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.arseniolourenco.product_service.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/microservices_new$All_in_microservices_new.ic" NAME="All in microservices-new Coverage Results" MODIFIED="1740425992784" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true" />
  </component>
</project>